{"version":3,"sources":["db/firebaseConfig.js","db/Api.js","components/ChatListItem/index.js","assests/intro-wpp.jpg","components/ChatIntro/index.js","components/ChatWindow/index.js","components/NewChat/index.js","assests/preview.png","components/Login/index.js","components/NotDisturb/index.js","components/TopBar/index.js","components/status/StatusPlaceholder.js","components/status/StatusList.js","App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","storage","Api","onChatList","userId","setChatList","chatId","name","avatar","addUser","async","console","log","user","getContactList","id","addNewChat","userChat","setActiveChat","newChat","onChatContent","setList","setUsers","sender","message","type","getChatMessages","timestamp","Date","toISOString","sendMessage","messageData","uploadAttachment","editMessage","newMessage","GooglePopup","provider","GoogleAuthProvider","signInWithPopup","error","ChatListItem","_ref","onClick","data","active","time","setTime","useState","useEffect","lastMessageDate","d","seconds","hours","getHours","minutes","getMinutes","concat","_jsxs","children","className","_jsx","lastMessage","ChatIntro","src","Image","alt","ChatWindow","setMessage","messages","setMessages","editingMessage","setEditingMessage","attachment","setAttachment","chatMessages","fetchMessages","title","map","msg","index","EditIcon","handleEditMessage","onChange","file","e","target","files","attachmentUrl","style","display","htmlFor","AttachFileIcon","value","placeholder","SendIcon","trim","prevMessages","getTime","NewChat","show","setShow","list","selectedFile","setSelectedFile","results","getList","handleClose","top","CloseIcon","color","fontSize","cursor","item","key","Login","onReceive","loginOptions","setLoginOptions","handleLoginOption","KeyboardArrowDownIcon","transform","result","image","href","NotDisturb","checked","setChecked","backgroundColor","right","TopBar","setUser","chatList","search","setSearch","options","setOptions","filter","chat","toLowerCase","includes","WhatsAppIcon","SearchIcon","handleOptions","handleExit","localStorage","removeItem","ExitToAppIcon","StatusPlaceholder","StatusList","placeholders","Array","fill","_","App","activeChat","showNewChat","setShowNewChat","showStatusList","setShowStatusList","JSON","parse","getItem","newUser","u","uid","displayName","email","photoURL","providerData","providerId","setItem","stringify","ForumIcon","LocalPhoneIcon","handleToggleStatusList","DonutLargeIcon","length","marginTop","handleNewChat","AddIcon","undefined","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6764a314.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nimport { getApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAxTGBAwP6HwaWCN4-PAMFhsVLYZnn0J1c\",\n  authDomain: \"whatsappclone-65d3a.firebaseapp.com\",\n  projectId: \"whatsappclone-65d3a\",\n  storageBucket: \"whatsappclone-65d3a.appspot.com\",\n  messagingSenderId: \"44093790458\",\n  appId: \"1:44093790458:web:cc55c2757cc6aa6c485143\",\n  measurementId: \"G-YF8Y261RZF\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebaseApp.auth();\nconst storage = firebaseApp.storage();\nexport { auth, firebaseApp, db, storage, firebaseConfig };","import firebase from 'firebase/compat/app';\r\nimport { auth, db, storage } from './firebaseConfig';\r\n\r\nconst Api = {\r\n  onChatList: (userId, setChatList) => {\r\n    setChatList([\r\n      { chatId: '1', name: 'User 1', avatar: 'https://via.placeholder.com/150' },\r\n      { chatId: '2', name: 'User 2', avatar: 'https://via.placeholder.com/150' }\r\n    ]);\r\n  },\r\n  addUser: async (user) => {\r\n    console.log('User added:', user);\r\n  },\r\n  getContactList: async (userId) => {\r\n    return [\r\n      { id: 'user1', name: 'User One', avatar: 'https://via.placeholder.com/150' },\r\n      { id: 'user2', name: 'User Two', avatar: 'https://via.placeholder.com/150' }\r\n    ];\r\n  },\r\n  addNewChat: async (user, userChat, setActiveChat, selectedFile = null) => {\r\n    const newChat = { chatId: 'newChatId', name: userChat.name, avatar: userChat.avatar };\r\n    setActiveChat(newChat);\r\n    console.log('New chat started with:', userChat.name);\r\n  },\r\n  onChatContent: (chatId, setList, setUsers) => {\r\n    setList([\r\n      { sender: 'user1', message: 'Hello!', type: 'text' },\r\n      { sender: 'user2', message: 'Hi!', type: 'text' }\r\n    ]);\r\n    setUsers(['user1', 'user2']);\r\n    return () => {};\r\n  },\r\n  getChatMessages: async (chatId) => {\r\n    return [\r\n      { sender: 'user1', message: 'Hello!', type: 'text', timestamp: new Date().toISOString() },\r\n      { sender: 'user2', message: 'Hi!', type: 'text', timestamp: new Date().toISOString() }\r\n    ];\r\n  },\r\n  sendMessage: async (messageData, chatId) => {\r\n    console.log('Message sent:', { messageData, chatId });\r\n    return messageData;\r\n  },\r\n  uploadAttachment: async (file) => {\r\n    return 'https://via.placeholder.com/300';\r\n  },\r\n  editMessage: async (newMessage, chatId) => {\r\n    console.log('Message edited:', { newMessage, chatId });\r\n    return newMessage;\r\n  },\r\n  GooglePopup: async () => {\r\n    try {\r\n      const provider = new firebase.auth.GoogleAuthProvider();\r\n      const result = await auth.signInWithPopup(provider);\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Google login failed', error);\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default Api;\r\n","// src/components/ChatListItem.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './ChatListItem.css';\r\n\r\nexport default function ChatListItem({ onClick, data, active, name }) {\r\n  const [time, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (data.lastMessageDate) {\r\n      let d = new Date(data.lastMessageDate.seconds * 1000);\r\n      let hours = d.getHours();\r\n      let minutes = d.getMinutes();\r\n      hours = hours < 10 ? `0${hours}` : hours;\r\n      minutes = minutes < 10 ? `0${minutes}` : minutes;\r\n      setTime(`${hours}:${minutes}`);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={`chatListItem ${active ? 'active' : ''}`} onClick={onClick}>\r\n        <div className=\"chatListItem--avatar\" /> {/* Avatar placeholder */}\r\n        <div className=\"chatListItem--details\">\r\n          <div className=\"chatListItem--name\">{name}</div> {/* Display user name */}\r\n          <div className=\"chatListItem--lastMsg\">\r\n            <p>{data.lastMessage}</p>\r\n          </div>\r\n          <div className=\"chatListItem--date\">{time}</div>\r\n        </div>\r\n      </div>\r\n      <hr className=\"divider\" /> {/* Divider line */}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/intro-wpp.6cc48a1e.jpg\";","import React from 'react';\nimport './ChatIntro.css';\nimport  Image  from '../../assests/intro-wpp.jpg';\n\nexport default function ChatIntro(){\n  return (\n    <div className=\"chatIntro\">\n      <div className=\"chatIntro--top\"></div>\n      <div className=\"chatIntro--main\">\n        <img src={Image} alt=\"\"/>\n        <h1>Keep your cell phone connected</h1>\n        <h2>WhatsApp connects to your phone to tune in to your messages. To reduce data usage, connect your phone to a Wi-Fi network.</h2>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\r\nimport './ChatWindow.css';\r\nimport Api from '../../db/Api';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nexport default function ChatWindow({ user, data }) {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [editingMessage, setEditingMessage] = useState(null);\r\n  const [attachment, setAttachment] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch messages for the chat\r\n    const fetchMessages = async () => {\r\n      const chatMessages = await Api.getChatMessages(data.chatId);\r\n      setMessages(chatMessages);\r\n    };\r\n    fetchMessages();\r\n  }, [data.chatId]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (message.trim() || attachment) {\r\n      let newMessage;\r\n      if (editingMessage) {\r\n        newMessage = { ...editingMessage, message, type: attachment ? 'image' : 'text', attachment };\r\n        await Api.editMessage(newMessage, data.chatId); // Edit the message in the API\r\n        setMessages((prevMessages) =>\r\n          prevMessages.map((msg) => (msg.id === newMessage.id ? newMessage : msg))\r\n        );\r\n      } else {\r\n        newMessage = {\r\n          id: new Date().getTime(), // Unique ID for the new message\r\n          sender: user.id,\r\n          message,\r\n          type: attachment ? 'image' : 'text',\r\n          attachment,\r\n          timestamp: new Date().toISOString(),\r\n        };\r\n        await Api.sendMessage(newMessage, data.chatId); // Send the message to the API\r\n        setMessages((prevMessages) => [...prevMessages, newMessage]);\r\n      }\r\n      setMessage('');\r\n      setAttachment(null);\r\n      setEditingMessage(null);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const attachmentUrl = await Api.uploadAttachment(file); // Upload the file to your storage and get the URL\r\n      setAttachment(attachmentUrl);\r\n    }\r\n  };\r\n\r\n  const handleEditMessage = (msg) => {\r\n    setMessage(msg.message);\r\n    setAttachment(msg.attachment);\r\n    setEditingMessage(msg);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatWindow\">\r\n      <div className=\"chatWindow--header\">\r\n        <img className=\"chatWindow--avatar\" src=\"https://t4.ftcdn.net/jpg/05/11/55/91/360_F_511559113_UTxNAE1EP40z1qZ8hIzGNrB0LwqwjruK.jpg\" alt=\"Avatar\" />\r\n        <div className=\"chatWindowItem--name\">Rohit</div>\r\n        <div className=\"chatWindow--title\">{data.title}</div>\r\n      </div>\r\n      <div className=\"chatWindow--messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={msg.id || index} className={`message ${msg.sender === user.id ? 'outgoing' : 'incoming'}`}>\r\n            {msg.attachment && (\r\n              <div className=\"message--attachment\">\r\n                <img src={msg.attachment} alt=\"Attachment\" />\r\n              </div>\r\n            )}\r\n            <div className=\"message--text\">{msg.message}</div>\r\n            {msg.sender === user.id && (\r\n              <EditIcon className=\"edit-icon\" onClick={() => handleEditMessage(msg)} />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chatWindow--input\">\r\n        <input\r\n          type=\"file\"\r\n          id=\"attachment\"\r\n          onChange={handleFileChange}\r\n          style={{ display: 'none' }}\r\n        />\r\n        <label htmlFor=\"attachment\" className=\"chatWindow--attachmentIcon\">\r\n          <AttachFileIcon />\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <SendIcon onClick={handleSendMessage} className=\"chatWindow--sendButton\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Api from '../../db/Api';\r\nimport './NewChat.css';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\nexport default function NewChat({ setActiveChat, user, show, setShow }) {\r\n  const [list, setList] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getList = async () => {\r\n      if (user !== null) {\r\n        let results = await Api.getContactList(user.id);\r\n        setList(results);\r\n      }\r\n    };\r\n    getList();\r\n  }, [user]);\r\n\r\n  const handleClose = () => setShow(!show);\r\n\r\n  const addNewChat = async (userChat) => {\r\n    if (selectedFile) {\r\n      await Api.addNewChat(user, userChat, setActiveChat, selectedFile);\r\n    } else {\r\n      await Api.addNewChat(user, userChat, setActiveChat);\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar newChat\" style={{ top: show ? '60px' : '100vh' }}>\r\n      <div className=\"sidebar--topo topo-transparent\"></div>\r\n      <div className=\"sidebar--content\">\r\n        <div className=\"sidebar--chatlist\">\r\n          <div className='sidebar--chatlist-top'>\r\n            <h1>Contacts</h1>\r\n            <div onClick={handleClose} className=\"newChat--closebutton\">\r\n              <CloseIcon style={{ color: 'black', fontSize: 30, cursor: 'pointer', \r\n               }} />\r\n            </div>\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            id=\"attachment\"\r\n            onChange={handleFileChange}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <label htmlFor=\"attachment\" className=\"newChat--attachment\">\r\n            <AttachFileIcon style={{ color: '#1DAB67', fontSize: 30, cursor: 'pointer' }} />\r\n          </label>\r\n          <div className=\"newChat--list\">\r\n            {list.map((item, key) => (\r\n              <div onClick={() => { addNewChat(item) }} className=\"newChat--item\" key={key}>\r\n                <img className=\"newChat--itemAvatar\" src={item.avatar} alt=\"\" />\r\n                <div className=\"newChat--itemName\">{item.name}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/preview.af3888e1.png\";","import React, { useState } from 'react';\nimport Api from '../../db/Api.js';\nimport './Login.css';\nimport image from '../../assests/preview.png';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nexport default function Login({ onReceive }) {\n  const [loginOptions, setLoginOptions] = useState(false);\n\n  const handleLoginOption = () => setLoginOptions(!loginOptions);\n\n  const handleGoogleLogin = async () => {\n    let result = await Api.GooglePopup();\n    if (result) {\n      onReceive(result.user);\n    }\n  };\n\n  return (\n    <section className=\"container-login\">\n      <div className=\"login-topbar\">\n        <div className=\"topbar--version\">\n          <div className=\"topbar--login\" onClick={handleLoginOption}>\n            <div>Login</div>\n            <KeyboardArrowDownIcon\n              style={{ color: '#ccc', transform: `rotate(${loginOptions ? '180deg' : '0'})` }}\n            />\n          </div>\n          <div className=\"login-options\" style={{ display: loginOptions ? 'flex' : 'none' }}>\n            <div className=\"login--option\" onClick={handleGoogleLogin}>Google</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"login-main\">\n        <div className=\"login-main--top\">\n          <img\n            className=\"login-main--top-img\"\n            src=\"https://i.pinimg.com/originals/f5/28/cc/f528cc010d8a9bfcef07d08106976d0f.png\"\n            alt=\"\"\n          />\n          <h1>Message any Time anywhere 💬</h1>\n        </div>\n      </div>\n      <div className=\"login-main--content\">\n        <img src={image} alt=\"preview\" />\n      </div>\n      <div className=\"footer\">\n        &copy; 2024 <a href=\"https://ernane-dev.netlify.app/\">Developed by Lakshita</a>\n      </div>\n    </section>\n  );\n}\n","import React , { useState }from 'react';\nimport './NotDisturb.css';\n\nexport default function NotDisturb(){\n\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <div onClick={() => setChecked(!checked)} className=\"label-not-disturb\">\n      <div className='container-toggle' style={{backgroundColor: checked ? '#1EBE71' : '#C6C6C6'}}>\n        <div className=\"toggle\" style={{right: checked ? '2px' : '20px', backgroundColor: checked ? '#eee' : '#F2F2F2'}}></div>\n      </div>\n      <p>Mute message</p>\n    </div>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport './TopBar.css';\n\nimport Api from '../../db/Api';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nexport default function TopBar({user, setUser, chatList, setChatList}){\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState(false);\n\n  const handleOptions = () => {\n    setOptions(!options)\n  }\n  const handleExit = () => {\n    setUser(null); \n    localStorage.removeItem('user');\n  };\n  useEffect(()=>{\n    if (search !== ''){\n      setChatList(chatList.filter(chat => chat.title.toLowerCase().includes(search.toLowerCase())));\n    }else{\n      Api.onChatList(user.id, setChatList);\n    }\n  },[search]);\n  return (\n    <div className=\"TopBar\">\n      <div className=\"container\">\n        <div className=\"logo\">\n          <WhatsAppIcon style={{color: '#fff', fontSize: 35}}/>\n          <p>WhatsappClone</p>\n        </div>\n        <div className=\"search\">\n          <div className=\"search--input\">\n            <SearchIcon style={{color: '#ffffff80', fontSize: 20}}/>\n            <input type=\"search\" value={search} onChange={e=>setSearch(e.target.value)}placeholder=\"Search for message\"/>\n          </div>\n        </div>\n        <div className=\"profile\">\n          <p>{user.name}</p>\n          <img src={user.avatar} alt=\"avatar\" onClick={handleOptions}/>\n            <div className={`profile--options ${options ? 'active' : ''}`} onClick={handleExit}>\n              <div className=\"profile--options--option\">\n                <ExitToAppIcon style={{color: '#1EBE71', fontSize: '23px'}}/>\n                <p>LogOut</p>\n              </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","\r\nimport React from 'react';\r\nimport './StatusPlaceholder.css';\r\n\r\nconst StatusPlaceholder = () => {\r\n  return (\r\n    <div className=\"status-placeholder\">\r\n      <div className=\"status-circle\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusPlaceholder;\r\n","// StatusList.js\r\nimport React from 'react';\r\nimport StatusPlaceholder from './StatusPlaceholder';\r\nimport './StatusList.css';\r\n\r\nconst StatusList = () => {\r\n  const placeholders = Array(10).fill(0); \r\n\r\n  return (\r\n    <div className=\"status-list\">\r\n      {placeholders.map((_, index) => (\r\n        <StatusPlaceholder key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusList;\r\n","// src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Api from './db/Api';\r\nimport './App.css';\r\nimport ChatListItem from './components/ChatListItem';\r\nimport ChatIntro from './components/ChatIntro';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport NewChat from './components/NewChat';\r\nimport Login from './components/Login';\r\nimport NotDisturb from './components/NotDisturb';\r\nimport TopBar from './components/TopBar';\r\nimport StatusList from './components/status/StatusList';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport LocalPhoneIcon from '@material-ui/icons/LocalPhone';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\n\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(null);\r\n  const [chatList, setChatList] = useState([]);\r\n  const [activeChat, setActiveChat] = useState({});\r\n  const [showNewChat, setShowNewChat] = useState(false);\r\n  const [showStatusList, setShowStatusList] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user === null) {\r\n      setUser(JSON.parse(localStorage.getItem('user')));\r\n    } else {\r\n      Api.onChatList(user.id, setChatList);\r\n    }\r\n  }, [user]);\r\n\r\n  const handleNewChat = () => {\r\n    setShowNewChat(!showNewChat);\r\n  };\r\n\r\n  const handleLoginData = async (u) => {\r\n    const newUser = {\r\n      id: u.uid,\r\n      name: u.displayName,\r\n      email: u.email,\r\n      avatar: u.photoURL,\r\n      provider: u.providerData.providerId,\r\n    };\r\n    await Api.addUser(newUser);\r\n    setUser(newUser);\r\n    localStorage.setItem('user', JSON.stringify(newUser));\r\n  };\r\n\r\n  const handleToggleStatusList = () => {\r\n    setShowStatusList(!showStatusList);\r\n  };\r\n\r\n  if (user === null) return <Login onReceive={handleLoginData} />;\r\n\r\n  return (\r\n    <div className=\"app-window\">\r\n      <NewChat\r\n        setActiveChat={setActiveChat}\r\n        chatList={chatList}\r\n        user={user}\r\n        show={showNewChat}\r\n        setShow={setShowNewChat}\r\n      />\r\n      <TopBar user={user} chatList={chatList} setUser={setUser} setChatList={setChatList} />\r\n      <div className=\"MainContent\">\r\n        <div className=\"sidebar\">\r\n          <div className=\"sidebar--topo\"></div>\r\n          <div className=\"sidebar--content\">\r\n            <div className=\"sidebar--actions\">\r\n              <div className=\"sidebar--actions--btn\">\r\n                <ForumIcon style={{ color: '#1DAB67', fontSize: 40 }} />\r\n                <p className=\"sidebar--actions-label\">Messages</p>\r\n              </div>\r\n              <div className=\"sidebar--actions--btn\">\r\n                <LocalPhoneIcon style={{ color: '#A5A5A5', fontSize: 40 }} />\r\n                <p className=\"sidebar--actions-label\">Calls</p>\r\n              </div>\r\n              <div className=\"sidebar--actions--btn\" onClick={handleToggleStatusList}>\r\n                <DonutLargeIcon\r\n                  style={{ color: showStatusList ? '#1DAB67' : '#A5A5A5', fontSize: 40 }}\r\n                />\r\n                <p className=\"sidebar--actions-label\">Status</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"sidebar--chatlist\">\r\n              <div className=\"sidebar--chatlist-disturb\">\r\n                <NotDisturb />\r\n              </div>\r\n              {showStatusList ? (\r\n                <StatusList />\r\n              ) : chatList.length > 0 ? (\r\n                chatList.map((item, key) => (\r\n                  <ChatListItem\r\n                    key={key}\r\n                    data={item}\r\n                    active={activeChat.chatId === item.chatId}\r\n                    onClick={() => setActiveChat(item)}\r\n                    name={key % 2 === 0 ? 'Mira' : 'Lakshita'} // Alternate names\r\n                  />\r\n                ))\r\n              ) : (\r\n                <div className=\"not-chat-search\">\r\n                  <div className=\"chat-notfound\" style={{ marginTop: 20 }}>\r\n                    <ForumIcon style={{ color: '#ccc', fontSize: 50 }} />\r\n                    <p className=\"sidebar--actions-label\" style={{ color: '#999' }}>No Chat found</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"sidebar--chatlist-newChat\">\r\n                <h1>You've come to an end.</h1>\r\n                <p>Add more friends!</p>\r\n                <div className=\"sidebar--chatlist--btn-more\" onClick={handleNewChat}>\r\n                  <AddIcon style={{ color: '#fff', fontSize: 40 }} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"contentarea\">\r\n          {activeChat.chatId !== undefined ? (\r\n            <ChatWindow user={user} data={activeChat} />\r\n          ) : (\r\n            <ChatIntro />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}